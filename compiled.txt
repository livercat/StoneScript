var armor_shield = "poison shield *8 ap"
var regen_shield = "vigor shield *8 ah"
var dashing = "dashing shield *7"
var bashing = "bashing shield"

var fire_1h = "fire sword *7 dF"
var poison_1h = "posion sword *8 dP"
var ice_1h = "ice sword *6 dI"
var aether_1h = "aether sword *7 D"
var vigor_1h = "vigor sword *7 dL"

var elemental = "vigor staff *7"
var ranged_1h = ""
var ranged_2h = "repeating crossbow *9"

var bardiche = "bardiche *8"
var blade = "blade of the fallen god"
var arm = "skeleton arm"

var arm_damage = 20
var pickpocket = "pick_pocket:2"
var chill = "❄:debuff_chill:6:"

var melee_dps = vigor_1h
var melee_offhand = fire_1h
var melee_aoe = bardiche

// internal use
var _main_hand = ""
var _naga = 0
var _cache = []
var _hy = 6
var _buffs = [["smite", "Smite"], 
^["pick_pocket", "Pickpocket"],
^["vampiric", "Vampiric"],
^["debuff_damage", "DmgDown"],
^["lucky_crit_multi", "Lucky"]]
var _debuffs = [
^["debuff_yeti_chill", "AtkSlow"],
^["debuff_duration_damage", "Poison"],
^["debuff_move_speed", "MoveSlow"]]
var _st = []
// cooldowns
var mindCD
var staffCD
var bashCD
var dashCD
var armCD
var hammerCD
var bladeCD
var bardCD
var dasher
mindCD = item.GetCooldown("mind")
staffCD = item.GetCooldown("quarterstaff")
bashCD = item.GetCooldown("bash")
dashCD = item.GetCooldown("dash")
armCD = item.GetCooldown("skeleton_arm")
hammerCD = item.GetCooldown("hammer")
bladeCD = item.GetCooldown("blade")
bardCD = item.GetCooldown("bardiche")


func fmt(s, list)
  _st.Clear()
  var splt = string.Split(s, ":", ",")
  ?splt.Count() > 0
    for i = 0 .. list.Count() - 1
      var idx = splt.IndexOf(list[i][0])
      ?idx > -1
        _st.Add(string.Format("{0}({1})",
        ^list[i][1], splt[idx+1]))
    return string.Join(", ", _st)
  return ""

func draw_hud(show_foe)
  ?buffs.count > 0
    var b_str = fmt(buffs.string, _buffs)
    ?b_str
      >`0,22,@b_str@
      >`0,23,@buffs.string@
  :
    >`0,22,No buffs
  ?debuffs.count > 0
    var d_str = fmt(debuffs.string, _debuffs)
    ?d_str
      >`0,24,@d_str@
      >`0,25,@debuffs.string@
  :
    >`0,24,No debuffs
  // cooldowns
  >`0,@_hy+0@,#@colorize(mindCD, false)@,Mind 
  ^@time.FormatDigital(mindCD)@
  >`0,@_hy+1@,#@colorize(hammerCD, 
  ^should_hammer())@,Hammer 
  ^@time.FormatDigital(hammerCD)@
  >`0,@_hy+2@,#@colorize(bardCD, 
  ^should_bardiche())@,Bard 
  ^@time.FormatDigital(bardCD)@
  >`0,@_hy+3@,#@colorize(bladeCD, 
  ^should_smite())@,Blade 
  ^@time.FormatDigital(bladeCD)@
  >`0,@_hy+4@,#@colorize(armCD, 
  ^should_slap())@,Arm 
  ^@time.FormatDigital(armCD)@
  ?show_foe
    >`0,25,@foe@
    ?foe
      >`0,@_hy+5@,@foe.name@
      >`0,@_hy+6@,Foe DMG: @foe.damage@
      >`0,@_hy+7@,Foe State: @foe.state@
      >`0,@_hy+8@,Foe Distance: @foe.distance@
    :
      >`0,@_hy+5@,No Enemy

func colorize(cd, cond)
  ?cd <= 0
    ?cond
      return "blue"
    return "green"
  return "red"

func can_activate()
  return item.CanActivate() & ai.enabled

func healwalk()
  ?foe.distance < 25 & hp < (maxhp / 4) &
  ^(item.potion = "healing" | 
  ^item.potion = "vampiric")
    activate potion
  ?foe & foe.distance < 23
    return
  ?pickup.distance < 8
    equipL star
    equip_shield()
  :?target = waypoint | foe.distance > 22
    ?staffCD <= 0 &
    ^can_activate()
      equip quarterstaff
      ?item.CanActivate("quarterstaff")
        activate R
    :
      equip_shield()
      ?hp < maxhp
        equipL ouroboros
      :
        equipL triskelion

func dash()
  ?foe.distance > 6 & 
  ^can_activate() &
  // don't dash into ray
  ^(foe!dysangelos_perfected|foe.state!115)
    ?bashCD <= 0
      return bashing
    :?dashCD <= 0
      return dashing
  return false

func mind_dodge()
  equipL mind
  equip_shield()

func equip_offhand(mode)
  dasher = dash()
  ?dasher ! false
    equipR @dasher@
  :?mode = "dps"
    ?_main_hand = melee_dps
      equipR @melee_offhand@
    :
      equipR @melee_dps@
  :?mode = "def"
    equip_shield()

func equip_shield()
  ?hp < maxhp
    equipR @regen_shield@
  :
    equipR @armor_shield@

func aac(weapon)
  equip @weapon@
  ?ai.idle
    equip wand
  equip @weapon@

func should_slap()
  ?armCD > 0 |
  ^foe = pallas | // immune
  ^!can_activate() |
  ^foe.distance > 6
    return false
  ?buffs.string ! pickpocket
    return true
  return (foe.armor + foe.hp) <= arm_damage

func slap()
  aac(arm)
  ?item.CanActivate("skeleton_arm") &
  ^buffs.string = pickpocket
    activate R

func should_smite()
  ?bladeCD > 0 |
  ^foe = pallas | // immune
  ^!can_activate() |
  ^foe.distance > 11
    return false
  return (foe.count >= 7 | foe = boss)

func smite()
  aac(blade)
  ?item.CanActivate("blade")
    activate R

func hammerOK()
  return hammerCD <= 0 | hammerCD >= 647

func should_hammer()
  ?!can_activate() |
  ^foe.armor <= 0 |
  ^foe.distance > 7 |
  ^foe ! boss |
  ^(foe=dysangelos_perfected & foe.state<107)
    // delay hammering until shield animation ends
    return false
  return hammerOK()

func hammer()
  // for some reason can't use 
  // var with hammer name
  equip heavy hammer
  ?item.CanActivate("hammer")
    activate R

func bardicheOK()
  return bardCD <= 0 | bardCD >= 870

func should_bardiche()
  ?!can_activate() |
  ^foe.distance > 9 |
  ^(foe ! boss & foe.count < 5)
    return false
  return bardicheOK()

func bardiche()
  aac(bardiche)
  ?item.CanActivate("bardiche")
    activate R

func equip_main_hand(weapon)
  _main_hand = weapon
  equipL @weapon@

func should_melee()
  // medium range, but not marked as ranged
  return foe = mine_walker |
  // made by hrminir
  ^foe = ice_wall |
  // poisons you when attacked by ranged
  ^foe = cult_guard |
  // don't shoot the brick wall
  ^foe = immune_to_ranged | 
  ^foe = ranged | foe = boss |
  // swarms
  ^(foe = spawner & loc ! caves)

// modes: "dps", "def"
func melee(mode)
  _main_hand = ""
  ?hp < (maxhp / 2)
    equip_main_hand(vigor_1h)
  :?foe = aether
    equip_main_hand(vigor_1h)
  :?foe = fire
    equip_main_hand(aether_1h)
  :?foe = ice
    equip_main_hand(fire_1h)
  :?foe = poison
    equip_main_hand(ice_1h)
  :?foe = vigor
    equip_main_hand(poison_1h)
  :
    equip_main_hand(melee_dps)
  equip_offhand(mode)

// modes: "dps", "def"
func ranged(mode)
  _main_hand = ""
  ?foe = immune_to_physical
    equip @elemental@
  :?(mode="dps" & ranged_2h ! "") | ranged_1h=""
    equip @ranged_2h@
  :?(mode="def" & ranged_1h ! "") | ranged_2h=""
    equip_main_hand(ranged_1h)
    equip_offhand(mode)
  :
    melee(mode)

func should_aoe()
  return foe.count >= 4 | 
  ^(foe = spawner & foe.count > 1 & loc ! caves)

func aoe()
  equip @melee_aoe@
  ?ai.idle
    equip wand
    equip @melee_aoe@

// modes: "dps", "def"
func fight(mode)
  ?foe.distance > 22
    healwalk()
  :?should_smite()
    smite()
  // xbow range
  :?foe.distance <= 22 & foe.distance > 7
    ?should_melee()
      melee(mode)
    :
      ranged(mode)
  // melee range
  :?foe = immune_to_physical
    equip @elemental@
  :?should_slap()
    slap()
  :?should_hammer()
    hammer()
  :?should_bardiche()
    bardiche()
  :?should_aoe()
    aoe()
  :
    melee(mode)
  
// modes: "dps", "def"
func fight_boss(mode)
  ?foe.distance > 22
    healwalk()
  :?should_smite()
    smite()
  :?should_slap()
    slap()
  :?should_hammer()
    hammer()
  :?should_bardiche()
    bardiche()
  :?foe.buffs.string = "buff_protection"
    fight(mode)
  :?foe.debuffs.string ! "∞:debuff_damage:1:" &
  ^ foe ! immune_to_debuff_damage
    equip_main_hand(poison_1h)
    equip_offhand(mode)
  :?foe.debuffs.string ! "φ:debuff_dot:1:" &
  ^foe ! immune_to_debuff_dot
    equip_main_hand(fire_1h)
    equip_offhand(mode)
  :?foe.debuffs.string ! chill &
  ^foe ! immune_to_debuff_chill
    equip_main_hand(ice_1h)
    equip_offhand(mode)
  :
    fight(mode)

// modes: "dps", "def"
func default(mode)
  healwalk()
  ?foe ! boss
    fight(mode)
  :
    fight_boss(mode)

func brew_pot()
  ?item.potion = empty
    ?loc = caves
      brew stone + bronze
    :
      brew tar + bronze

/*
Actual logic below
*/

draw_hud(false)
brew_pot()

?loc.loop
  _main_hand = ""
  _naga = 0
  _cache.Clear()

?loc = rocky
  healwalk()
  ?foe = dysangelos_elementalist
    // debuffing is risky in phase 2
    fight("dps")
  :?foe = dysangelos_perfected
    fight_boss("dps")
  :
    fight_boss("def")
  ?foe.state = 115 & foe.time = 60
    // dodge the orb ray
    mind_dodge()

?loc = deadwood
  ?foe.name=Poena
    // cheese her by staying out of range
    ?foe.buffs.string="poena_mirror"
      ranged("dps")
    :?mindCD <=0 &
    ^foe.distance < 23 & foe.state = 32 &
    ^foe.time > 37
      mind_dodge()
    :
      ranged("dps")
  :
    default("def")

?loc = caves
  ?foe ! boss
    default("def")
  :
    ?bardicheOK() | bladeCD <= 0
      fight_boss("def")
    :?foe.distance < 15
      ?mindCD <= 0
        mind_dodge()
      :
        fight_boss("def")
    :
      ?hp > (maxhp / 2)
        ?item.potion ! empty
          activate potion
        ranged("dps")
      :
        fight_boss("def")

?loc = fungus_forest | loc = fungus_forest_boss
  default("def")

?loc = undead_crypt | loc = undead_crypt_boss
  default("def")

?loc = mine | loc = bronze_guardian
  ?foe ! boss
    default("def")
  :?foe.state = 32 & foe.time = 22
    // dodge hammer
    mind_dodge()
  :?foe.state = 33
    // hammer is down
    fight_boss("dps")
  :?foe.distance > 15 & foe.state = 2
    ranged("dps")

?loc = icy_ridge
  healwalk()
  ?foe ! boss
    default("def")
  :?foe.armor > 0
    melee("dps")
  :?foe.state = 133
    ranged("dps")
  :?foe.distance <= 2
    fight("dps")
  :?foe.distance <= 5
    // The shovel has an attack range of 1
    // so it forces the player to move very
    // very close. So close that it can avoid
    // the attacks (snowballs)
    equip shovel
  : // blown away
    fight("def")

func detect_poison(pos_x, pos_y)
  >`0,0,x=@x@, y=@y@
  for px = pos_x .. pos_x+10
    for py = pos_y-6 .. pos_y
      ?draw.GetSymbol(px, py) = "("
        _cache.Add([pos_x, pos_y, px, py])
  var count = _cache.Count()
  ?count > 0
    for line = 1 .. count
      var v = _cache[line-1]
      >`0,@line@,x=@v[0]@, y=@v[1]@, 
      ^px=@v[2]@, py=@v[3]@;

func is_poison_near(pos_x, pos_y)
  // long and mid range
  ?draw.GetSymbol(pos_x+2, pos_y-6) = "(" |
  // melee
  ^(draw.GetSymbol(pos_x+1, pos_y-6) = "(")
    return true
  return false

func fight_nagajara()
  // goal is to dodge poison balls
  var x = screen.FromWorldX(pos.x)
  var y = screen.FromWorldZ(pos.z)
  // detect_poison(x, y)
  ?is_poison_near(x, y)
    _naga++

  ?_naga = 0
    // start at the xbow range
    ranged("dps")
  :?_naga = 1
    // staff 1st poison
    equip quarterstaff
    activate R
    _naga++
  :?_naga = 2
    // and continue to shoot
    ranged("dps")
  :?_naga = 3
    // dash into melee
    fight_boss("dps")
  :?_naga >= 4
    ?mindCD <= 0
      // dodge back and repeat
      mind_dodge()
      _naga = 0
    :
      // mind stone on CD, try to evade
      fight_boss("def")

?loc = temple | loc = nagaraja
  ?foe ! boss
    default("def")
  :
    fight_nagajara()